from flask import Flask, render_template, request
import pickle
import numpy as np
import os

# Initialize Flask app
app = Flask(__name__)

# Load the trained model (make sure model.pkl is in the root directory)
try:
    with open("model.pkl", "rb") as f:
        model = pickle.load(f)
except Exception as e:
    print(f"Failed to load model: {e}")
    model = None  # Placeholder if the model fails to load

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['GET', 'POST'])
def predict():
    prediction = None
    if request.method == 'POST':
        try:
            radius = float(request.form.get('radius'))
            texture = float(request.form.get('texture'))
            perimeter = float(request.form.get('perimeter'))
            area = float(request.form.get('area'))
            smoothness = float(request.form.get('smoothness'))

            data = [[radius, texture, perimeter, area, smoothness]]
            prediction_result = model.predict(data)[0]
            prediction = "Malignant" if prediction_result == 1 else "Benign"
        except Exception as e:
            prediction = f"Error: {e}"

    return render_template('index.html', prediction=prediction)

if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000))  # use Heroku's port or fallback to 5000
    app.run(host='0.0.0.0', port=port, debug=True)